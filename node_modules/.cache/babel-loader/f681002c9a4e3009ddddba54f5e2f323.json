{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laptop\\\\Documents\\\\GitHub\\\\techlabs2\\\\src\\\\components\\\\home\\\\Home.jsx\";\nimport React from 'react';\nimport './home.css';\nimport { Icon } from \"@iconify/react/dist/iconify\";\nimport locationIcon from \"@iconify/icons-mdi/map-marker\";\nimport GoogleMapReact from \"google-map-react\";\nimport MapPopup from \"../dialog/LocationDialog\";\nimport LocationDialog from \"../dialog/LocationDialog\";\nimport Footer from \"../footer/Footer\";\nimport Offcanvas from 'react';\nimport Button from 'react';\nimport useState from 'react';\nimport render from 'react';\nimport Polygon from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst location = {\n  address: 'Görli',\n  lat: 52.49632997574632,\n  lng: 13.437847871710412\n};\nconst defaultProps = {\n  center: {\n    lat: 10.99835602,\n    lng: 77.01502627\n  },\n  zoom: 17\n};\nconst [name, setName] = useState(() => {\n  // getting stored value\n  const saved = localStorage.getItem(\"coordinates\");\n  const initialValue = JSON.parse(saved);\n  return initialValue || \"\";\n});\n\nconst LocationPin = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pin\",\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      icon: locationIcon,\n      className: \"pin-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"pin-text\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LocationPin;\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locations: [{\n        address: 'Initial Pin',\n        lat: 52.49632997574632,\n        lng: 13.437847871710412\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"google-map\",\n        children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n          onClick: e => {\n            console.log('New Pin');\n            console.log(e);\n            this.setState({\n              locations: [{\n                address: 'New Pin',\n                lat: e.lat,\n                lng: e.lng\n              }]\n            });\n            return /*#__PURE__*/_jsxDEV(MapPopup, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 36\n            }, this);\n          },\n          bootstrapURLKeys: {\n            key: ''\n          },\n          defaultCenter: location,\n          defaultZoom: defaultProps.zoom,\n          children: this.state.locations.map(function (object, i) {\n            return /*#__PURE__*/_jsxDEV(LocationPin, {\n              lat: object.lat,\n              lng: object.lng,\n              text: object.address\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction Map(props) {\n  const {\n    zoom,\n    center\n  } = props;\n  return /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n    defaultZoom: zoom,\n    defaultCenter: center,\n    children: /*#__PURE__*/_jsxDEV(Polygon, {\n      path: coordinates,\n      editable: true,\n      options: {\n        strokeColor: \"#FF0000\",\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: \"#FF0000\",\n        fillOpacity: 0.35,\n        polygonKey: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Map;\nexport default Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LocationPin\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"sources":["C:/Users/laptop/Documents/GitHub/techlabs2/src/components/home/Home.jsx"],"names":["React","Icon","locationIcon","GoogleMapReact","MapPopup","LocationDialog","Footer","Offcanvas","Button","useState","render","Polygon","location","address","lat","lng","defaultProps","center","zoom","name","setName","saved","localStorage","getItem","initialValue","JSON","parse","LocationPin","text","Home","Component","constructor","props","state","locations","e","console","log","setState","key","map","object","i","Map","coordinates","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","polygonKey"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport './home.css'\r\nimport {Icon} from \"@iconify/react/dist/iconify\";\r\nimport locationIcon from \"@iconify/icons-mdi/map-marker\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport MapPopup from \"../dialog/LocationDialog\";\r\nimport LocationDialog from \"../dialog/LocationDialog\";\r\nimport Footer from \"../footer/Footer\";\r\nimport Offcanvas from 'react';\r\nimport Button from 'react';\r\nimport useState from 'react';\r\nimport render from 'react';\r\nimport Polygon from 'react';\r\n\r\nconst location = {\r\n    address: 'Görli',\r\n    lat: 52.49632997574632,\r\n    lng: 13.437847871710412,\r\n}\r\nconst defaultProps = {\r\n    center: {\r\n        lat: 10.99835602,\r\n        lng: 77.01502627\r\n    },\r\n    zoom: 17\r\n};\r\n\r\nconst [name, setName] = useState(() => {\r\n// getting stored value\r\nconst saved = localStorage.getItem(\"coordinates\");\r\nconst initialValue = JSON.parse(saved);\r\nreturn initialValue || \"\";\r\n});\r\n\r\n\r\nconst LocationPin = ({ text }) => (\r\n    <div className=\"pin\">\r\n        <Icon icon={locationIcon} className=\"pin-icon\" />\r\n        <p className=\"pin-text\">{text}</p>\r\n    </div>\r\n)\r\n\r\nclass Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {locations: [{\r\n                address: 'Initial Pin',\r\n                lat: 52.49632997574632,\r\n                lng: 13.437847871710412,\r\n            }]};\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"map\">\r\n                <div className=\"google-map\">\r\n                    <GoogleMapReact\r\n                        onClick={e => {\r\n                            console.log('New Pin');\r\n                            console.log(e);\r\n                            this.setState({\r\n                                locations: [{\r\n                                    address: 'New Pin',\r\n                                    lat: e.lat,\r\n                                    lng: e.lng,\r\n                                }]\r\n                            });\r\n                            return <MapPopup/>;\r\n                        } }\r\n                        bootstrapURLKeys={{ key: '' }}\r\n                        defaultCenter={location}\r\n                        defaultZoom={defaultProps.zoom}>\r\n                        {this.state.locations.map(function(object, i){\r\n                            return <LocationPin\r\n                                key={i}\r\n                                lat={object.lat}\r\n                                lng={object.lng}\r\n                                text={object.address}\r\n                            />;\r\n\r\n                        })}\r\n\r\n                    </GoogleMapReact>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }}\r\n\r\n\r\n\r\nfunction Map(props) {\r\n  const { zoom, center } = props;\r\n\r\n\r\n\r\n  return (\r\n    <GoogleMapReact defaultZoom={zoom} defaultCenter={center}>\r\n      <Polygon\r\n        path={coordinates}\r\n        editable={true}\r\n        options={{\r\n          strokeColor: \"#FF0000\",\r\n          strokeOpacity: 0.8,\r\n          strokeWeight: 2,\r\n          fillColor: \"#FF0000\",\r\n          fillOpacity: 0.35,\r\n          polygonKey: 1\r\n        }}\r\n      />\r\n    </GoogleMapReact>\r\n  );\r\n}\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}