{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laptop\\\\Documents\\\\GitHub\\\\techlabs2\\\\src\\\\components\\\\home\\\\Home.jsx\";\nimport React from 'react';\nimport './home.css';\nimport { Icon } from \"@iconify/react/dist/iconify\";\nimport locationIcon from \"@iconify/icons-mdi/map-marker\";\nimport GoogleMapReact from \"google-map-react\";\nimport MapPopup from \"../dialog/LocationDialog\";\nimport LocationDialog from \"../dialog/LocationDialog\";\nimport Footer from \"../footer/Footer\";\nimport Offcanvas from 'react';\nimport Button from 'react';\nimport useState from 'react';\nimport render from 'react';\nimport Marker from '../home/Marker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LocationPin = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pin\",\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      icon: locationIcon,\n      className: \"pin-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"pin-text\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LocationPin;\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locations: [{\n        address: 'Initial Pin',\n        lat: 52.49632997574632,\n        lng: 13.437847871710412\n      }]\n    };\n  }\n\n  renderPolylines(map, maps) {\n    /** Example of rendering geodesic polyline */\n    let geodesicPolyline = new maps.Polyline({\n      path: [{\n        lat: 53.42728,\n        lng: -6.24357\n      }, {\n        lat: 43.681583,\n        lng: -79.61146\n      }],\n      geodesic: true,\n      strokeColor: '#00a1e1',\n      strokeOpacity: 1.0,\n      strokeWeight: 4\n    });\n    geodesicPolyline.setMap(map);\n    /** Example of rendering non geodesic polyline (straight line) */\n\n    let nonGeodesicPolyline = new maps.Polyline({\n      path: [{\n        lat: 53.42728,\n        lng: -6.24357\n      }, {\n        lat: 43.681583,\n        lng: -79.61146\n      }],\n      geodesic: false,\n      strokeColor: '#e4e4e4',\n      strokeOpacity: 0.7,\n      strokeWeight: 3\n    });\n    nonGeodesicPolyline.setMap(map);\n    this.fitBounds(map, maps);\n  }\n\n  fitBounds(map, maps) {\n    var bounds = new maps.LatLngBounds();\n\n    for (let marker of this.props.markers) {\n      bounds.extend(new maps.LatLng(marker.lat, marker.lng));\n    }\n\n    map.fitBounds(bounds);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"google-map\",\n        children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n          onClick: e => {\n            console.log('New Pin');\n            console.log(e);\n            this.setState({\n              locations: [{\n                address: 'New Pin',\n                lat: e.lat,\n                lng: e.lng\n              }]\n            });\n            return /*#__PURE__*/_jsxDEV(MapPopup, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 36\n            }, this);\n          },\n          bootstrapURLKeys: {\n            key: 'AIzaSyBlh6UoKeNh9fXnUkgtUVfVpZEbopyFmXE'\n          },\n          defaultCenter: this.props.center,\n          defaultZoom: this.props.zoom,\n          onGoogleApiLoaded: _ref2 => {\n            let {\n              map,\n              maps\n            } = _ref2;\n            return this.renderPolylines(map, maps);\n          },\n          children: [this.state.locations.map(function (object, i) {\n            return /*#__PURE__*/_jsxDEV(LocationPin, {\n              lat: object.lat,\n              lng: object.lng,\n              text: object.address\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 36\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(Marker, {\n            text: 'DUB',\n            lat: 53.42728,\n            lng: -6.24357\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            text: 'YYZ',\n            lat: 43.681583,\n            lng: -79.61146\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nHome.defaultProps = {\n  markers: [{\n    lat: 53.42728,\n    lng: -6.24357\n  }, {\n    lat: 43.681583,\n    lng: -79.61146\n  }],\n  center: [47.367347, 8.5500025],\n  zoom: 4\n};\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationPin\");","map":{"version":3,"sources":["C:/Users/laptop/Documents/GitHub/techlabs2/src/components/home/Home.jsx"],"names":["React","Icon","locationIcon","GoogleMapReact","MapPopup","LocationDialog","Footer","Offcanvas","Button","useState","render","Marker","LocationPin","text","Home","Component","constructor","props","state","locations","address","lat","lng","renderPolylines","map","maps","geodesicPolyline","Polyline","path","geodesic","strokeColor","strokeOpacity","strokeWeight","setMap","nonGeodesicPolyline","fitBounds","bounds","LatLngBounds","marker","markers","extend","LatLng","e","console","log","setState","key","center","zoom","object","i","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport './home.css'\r\nimport {Icon} from \"@iconify/react/dist/iconify\";\r\nimport locationIcon from \"@iconify/icons-mdi/map-marker\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport MapPopup from \"../dialog/LocationDialog\";\r\nimport LocationDialog from \"../dialog/LocationDialog\";\r\nimport Footer from \"../footer/Footer\";\r\nimport Offcanvas from 'react';\r\nimport Button from 'react';\r\nimport useState from 'react';\r\nimport render from 'react';\r\nimport Marker from '../home/Marker'\r\n\r\n\r\nconst LocationPin = ({ text }) => (\r\n    <div className=\"pin\">\r\n        <Icon icon={locationIcon} className=\"pin-icon\" />\r\n        <p className=\"pin-text\">{text}</p>\r\n    </div>\r\n)\r\n\r\nclass Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {locations: [{\r\n                address: 'Initial Pin',\r\n                lat: 52.49632997574632,\r\n                lng: 13.437847871710412,\r\n            }]};\r\n    }\r\n    renderPolylines (map, maps) {\r\n       /** Example of rendering geodesic polyline */\r\n       let geodesicPolyline = new maps.Polyline({\r\n         path: [\r\n           {lat: 53.42728, lng: -6.24357},\r\n           {lat: 43.681583, lng: -79.61146}\r\n         ],\r\n         geodesic: true,\r\n         strokeColor: '#00a1e1',\r\n         strokeOpacity: 1.0,\r\n         strokeWeight: 4\r\n       })\r\n       geodesicPolyline.setMap(map)\r\n\r\n       /** Example of rendering non geodesic polyline (straight line) */\r\n       let nonGeodesicPolyline = new maps.Polyline({\r\n         path: [\r\n           {lat: 53.42728, lng: -6.24357},\r\n           {lat: 43.681583, lng: -79.61146}\r\n         ],\r\n         geodesic: false,\r\n         strokeColor: '#e4e4e4',\r\n         strokeOpacity: 0.7,\r\n         strokeWeight: 3\r\n       })\r\n       nonGeodesicPolyline.setMap(map)\r\n\r\n       this.fitBounds(map, maps)\r\n     }\r\n\r\n     fitBounds (map, maps) {\r\n       var bounds = new maps.LatLngBounds()\r\n       for (let marker of this.props.markers) {\r\n         bounds.extend(\r\n           new maps.LatLng(marker.lat, marker.lng)\r\n         )\r\n       }\r\n       map.fitBounds(bounds)\r\n     }\r\n    render(){\r\n        return (\r\n            <div className=\"map\">\r\n                <div className=\"google-map\">\r\n                    <GoogleMapReact\r\n                        onClick={e => {\r\n                            console.log('New Pin');\r\n                            console.log(e);\r\n                            this.setState({\r\n                                locations: [{\r\n                                    address: 'New Pin',\r\n                                    lat: e.lat,\r\n                                    lng: e.lng,\r\n                                }]\r\n                            });\r\n                            return <MapPopup/>;\r\n                        } }\r\n                        bootstrapURLKeys={{ key:'AIzaSyBlh6UoKeNh9fXnUkgtUVfVpZEbopyFmXE'}}\r\n                        defaultCenter={this.props.center}\r\n                        defaultZoom={this.props.zoom}\r\n\r\n                        onGoogleApiLoaded={({map, maps}) => this.renderPolylines(map, maps)}>\r\n                        {this.state.locations.map(function(object, i){\r\n                            return <LocationPin\r\n                                key={i}\r\n                                lat={object.lat}\r\n                                lng={object.lng}\r\n                                text={object.address}\r\n                            />;\r\n                        })}\r\n                        <Marker text={'DUB'} lat={53.42728} lng={-6.24357} />\r\n                        <Marker text={'YYZ'} lat={43.681583} lng={-79.61146} />\r\n                    </GoogleMapReact>\r\n\r\n                </div>\r\n\r\n    <Footer/>\r\n            </div>\r\n\r\n        );\r\n  }\r\n}\r\nHome.defaultProps = {\r\n  markers: [\r\n    {lat: 53.42728, lng: -6.24357},\r\n    {lat: 43.681583, lng: -79.61146}\r\n  ],\r\n  center: [47.367347, 8.5500025],\r\n  zoom: 4\r\n}\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}