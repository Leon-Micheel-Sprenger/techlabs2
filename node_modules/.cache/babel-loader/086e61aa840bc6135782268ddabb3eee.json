{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laptop\\\\Documents\\\\GitHub\\\\techlabs2\\\\src\\\\components\\\\home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './home.css';\nimport { Icon } from \"@iconify/react/dist/iconify\";\nimport locationIcon from \"@iconify/icons-mdi/map-marker\";\nimport GoogleMapReact from \"google-map-react\";\nimport MapPopup from \"../dialog/LocationDialog\";\nimport LocationDialog from \"../dialog/LocationDialog\";\nimport Footer from \"../footer/Footer\";\nimport Offcanvas from 'react';\nimport Button from 'react';\nimport useState from 'react';\nimport render from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction OffCanvasExample(_ref) {\n  _s();\n\n  let {\n    name,\n    ...props\n  } = _ref;\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      className: \"me-2\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Offcanvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: \"Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(OffCanvasExample, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = OffCanvasExample;\n\nfunction Example() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: ['bottom'].map((placement, idx) => /*#__PURE__*/_jsxDEV(OffCanvasExample, {\n      placement: placement,\n      name: placement\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n\n_c2 = Example;\nrender( /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 8\n}, this));\nconst location = {\n  address: 'GÃ¶rli',\n  lat: 52.49632997574632,\n  lng: 13.437847871710412\n};\nconst defaultProps = {\n  center: {\n    lat: 10.99835602,\n    lng: 77.01502627\n  },\n  zoom: 17\n};\n\nconst LocationPin = _ref2 => {\n  let {\n    text\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pin\",\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      icon: locationIcon,\n      className: \"pin-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"pin-text\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = LocationPin;\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locations: [{\n        address: 'Initial Pin',\n        lat: 52.49632997574632,\n        lng: 13.437847871710412\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"google-map\",\n        children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n          onClick: e => {\n            console.log('New Pin');\n            console.log(e);\n            this.setState({\n              locations: [{\n                address: 'New Pin',\n                lat: e.lat,\n                lng: e.lng\n              }]\n            });\n            return /*#__PURE__*/_jsxDEV(MapPopup, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 36\n            }, this);\n          },\n          bootstrapURLKeys: {\n            key: ''\n          },\n          defaultCenter: location,\n          defaultZoom: defaultProps.zoom,\n          children: this.state.locations.map(function (object, i) {\n            return /*#__PURE__*/_jsxDEV(LocationPin, {\n              lat: object.lat,\n              lng: object.lng,\n              text: object.address\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Home;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"OffCanvasExample\");\n$RefreshReg$(_c2, \"Example\");\n$RefreshReg$(_c3, \"LocationPin\");","map":{"version":3,"sources":["C:/Users/laptop/Documents/GitHub/techlabs2/src/components/home/Home.jsx"],"names":["React","Icon","locationIcon","GoogleMapReact","MapPopup","LocationDialog","Footer","Offcanvas","Button","useState","render","OffCanvasExample","name","props","show","setShow","handleClose","handleShow","Example","map","placement","idx","location","address","lat","lng","defaultProps","center","zoom","LocationPin","text","Home","Component","constructor","state","locations","e","console","log","setState","key","object","i"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport './home.css'\r\nimport {Icon} from \"@iconify/react/dist/iconify\";\r\nimport locationIcon from \"@iconify/icons-mdi/map-marker\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport MapPopup from \"../dialog/LocationDialog\";\r\nimport LocationDialog from \"../dialog/LocationDialog\";\r\nimport Footer from \"../footer/Footer\";\r\nimport Offcanvas from 'react';\r\nimport Button from 'react';\r\nimport useState from 'react';\r\nimport render from 'react';\r\n\r\nfunction OffCanvasExample({ name, ...props }) {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={handleShow} className=\"me-2\">\r\n        {name}\r\n      </Button>\r\n      <Offcanvas show={show} onHide={handleClose} {...props}>\r\n        <Offcanvas.Header closeButton>\r\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n          Some text as placeholder. In real life you can have the elements you\r\n          have chosen. Like, text, images, lists, etc.\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Example() {\r\n  return (\r\n    <>\r\n      {['bottom'].map((placement, idx) => (\r\n        <OffCanvasExample key={idx} placement={placement} name={placement} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nrender(<Example />);\r\n\r\nconst location = {\r\n    address: 'GÃ¶rli',\r\n    lat: 52.49632997574632,\r\n    lng: 13.437847871710412,\r\n}\r\nconst defaultProps = {\r\n    center: {\r\n        lat: 10.99835602,\r\n        lng: 77.01502627\r\n    },\r\n    zoom: 17\r\n};\r\nconst LocationPin = ({ text }) => (\r\n    <div className=\"pin\">\r\n        <Icon icon={locationIcon} className=\"pin-icon\" />\r\n        <p className=\"pin-text\">{text}</p>\r\n    </div>\r\n)\r\n\r\nclass Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {locations: [{\r\n                address: 'Initial Pin',\r\n                lat: 52.49632997574632,\r\n                lng: 13.437847871710412,\r\n            }]};\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"map\">\r\n                <div className=\"google-map\">\r\n                    <GoogleMapReact\r\n                        onClick={e => {\r\n                            console.log('New Pin');\r\n                            console.log(e);\r\n                            this.setState({\r\n                                locations: [{\r\n                                    address: 'New Pin',\r\n                                    lat: e.lat,\r\n                                    lng: e.lng,\r\n                                }]\r\n                            });\r\n                            return <MapPopup/>;\r\n                        } }\r\n                        bootstrapURLKeys={{ key: '' }}\r\n                        defaultCenter={location}\r\n                        defaultZoom={defaultProps.zoom}>\r\n                        {this.state.locations.map(function(object, i){\r\n                            return <LocationPin\r\n                                key={i}\r\n                                lat={object.lat}\r\n                                lng={object.lng}\r\n                                text={object.address}\r\n                            />;\r\n\r\n                        })}\r\n\r\n                    </GoogleMapReact>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }}\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}