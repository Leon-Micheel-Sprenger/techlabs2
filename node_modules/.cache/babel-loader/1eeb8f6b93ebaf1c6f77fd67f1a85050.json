{"ast":null,"code":"var _jsxFileName = \"/Users/niloufarruthenberg/Documents/GitHub/src/components/home/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './home.css';\nimport { Icon } from \"@iconify/react/dist/iconify\";\nimport locationIcon from \"@iconify/icons-mdi/map-marker\";\nimport GoogleMapReact from \"google-map-react\";\nimport MapPopup from \"../dialog/LocationDialog\";\nimport LocationDialog from \"../dialog/LocationDialog\";\nimport Footer from \"../footer/Footer\";\nimport Offcanvas from 'react';\nimport Button from 'react';\nimport useState from 'react';\nimport render from 'react';\nimport Marker from '../home/Marker';\nimport { useLocalStorage } from '../dialog/GetStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LocationPin = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pin\",\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      icon: locationIcon,\n      className: \"pin-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"pin-text\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LocationPin;\n\nconst Cord = () => {\n  _s();\n\n  const [name, setName] = useLocalStorage(\"coordinates\", \"\");\n};\n\n_s(Cord, \"yN/017kySm7pUiM1/NF3kmU9SXQ=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c2 = Cord;\nconsole.log(Cord);\nconst Cords = [{\n  lat: 53.58478057098996,\n  lng: 9.9821214181999\n}, {\n  lat: 53.585353272422545,\n  lng: 9.981594028669774\n}, {\n  lat: 53.58954109166195,\n  lng: 9.986754679446447\n}, {\n  lat: 53.59247130945586,\n  lng: 9.988449891842066\n}, {\n  lat: 53.59310327127206,\n  lng: 9.989269136325957\n}, {\n  lat: 53.59263955626008,\n  lng: 9.99259031579172\n}, {\n  lat: 53.59473749633663,\n  lng: 9.998805353539408\n}];\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locations: [{\n        address: 'Initial Pin',\n        lat: 53.58478057098996,\n        lng: 9.9821214181999\n      }]\n    };\n  }\n\n  renderPolylines(map, maps) {\n    /** Example of rendering geodesic polyline */\n\n    /** Example of rendering non geodesic polyline (straight line) */\n    let nonGeodesicPolyline = new maps.Polyline({\n      path: this.props.markers,\n      geodesic: false,\n      strokeColor: '#e4e4e4',\n      strokeOpacity: 0.7,\n      strokeWeight: 3\n    });\n    nonGeodesicPolyline.setMap(map);\n    this.fitBounds(map, maps);\n  }\n\n  fitBounds(map, maps) {\n    var bounds = new maps.LatLngBounds();\n\n    for (let marker of this.props.markers) {\n      bounds.extend(new maps.LatLng(marker.lat, marker.lng));\n    }\n\n    map.fitBounds(bounds);\n  }\n\n  render() {\n    //Map (Google API) with function that sets Markers\n    //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"google-map\",\n        children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n          onClick: e => {\n            console.log('New Pin');\n            console.log(e);\n            this.setState({\n              locations: [{\n                address: 'New Pin',\n                lat: e.lat,\n                lng: e.lng\n              }]\n            });\n            return /*#__PURE__*/_jsxDEV(MapPopup, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 36\n            }, this);\n          },\n          bootstrapURLKeys: {\n            key: 'AIzaSyDSF3sRrD_jHS-OHJwtQBvCAMAluNU_FrY'\n          },\n          defaultCenter: this.props.center,\n          defaultZoom: this.props.zoom,\n          onGoogleApiLoaded: _ref2 => {\n            let {\n              map,\n              maps\n            } = _ref2;\n            return this.renderPolylines(map, maps);\n          },\n          children: this.state.locations.map(function (object, i) {\n            return /*#__PURE__*/_jsxDEV(LocationPin, {\n              lat: object.lat,\n              lng: object.lng,\n              text: object.address\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nHome.defaultProps = {\n  markers: Cords,\n  center: [52.49632997574632, 13.437847871710412],\n  zoom: 4\n};\nexport default Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LocationPin\");\n$RefreshReg$(_c2, \"Cord\");","map":{"version":3,"sources":["/Users/niloufarruthenberg/Documents/GitHub/src/components/home/Home.jsx"],"names":["React","Icon","locationIcon","GoogleMapReact","MapPopup","LocationDialog","Footer","Offcanvas","Button","useState","render","Marker","useLocalStorage","LocationPin","text","Cord","name","setName","console","log","Cords","lat","lng","Home","Component","constructor","props","state","locations","address","renderPolylines","map","maps","nonGeodesicPolyline","Polyline","path","markers","geodesic","strokeColor","strokeOpacity","strokeWeight","setMap","fitBounds","bounds","LatLngBounds","marker","extend","LatLng","e","setState","key","center","zoom","object","i","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport './home.css'\r\nimport {Icon} from \"@iconify/react/dist/iconify\";\r\nimport locationIcon from \"@iconify/icons-mdi/map-marker\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport MapPopup from \"../dialog/LocationDialog\";\r\nimport LocationDialog from \"../dialog/LocationDialog\";\r\nimport Footer from \"../footer/Footer\";\r\nimport Offcanvas from 'react';\r\nimport Button from 'react';\r\nimport useState from 'react';\r\nimport render from 'react';\r\nimport Marker from '../home/Marker'\r\nimport {useLocalStorage} from '../dialog/GetStorage'\r\n\r\nconst LocationPin = ({ text }) => (\r\n    <div className=\"pin\">\r\n        <Icon icon={locationIcon} className=\"pin-icon\" />\r\n        <p className=\"pin-text\">{text}</p>\r\n    </div>\r\n)\r\n\r\nconst Cord = () => {\r\n  const [name, setName] = useLocalStorage(\"coordinates\", \"\");\r\n};\r\nconsole.log(Cord);\r\n\r\nconst Cords = [\r\n  {lat: 53.58478057098996, lng: 9.9821214181999},\r\n  {lat: 53.585353272422545, lng: 9.981594028669774},\r\n  {lat: 53.58954109166195, lng: 9.986754679446447},\r\n  {lat: 53.59247130945586, lng: 9.988449891842066},\r\n  {lat: 53.59310327127206, lng: 9.989269136325957},\r\n  {lat: 53.59263955626008, lng: 9.99259031579172},\r\n  {lat: 53.59473749633663, lng: 9.998805353539408}\r\n];\r\n\r\nclass Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {locations: [{\r\n                address: 'Initial Pin',\r\n                lat: 53.58478057098996,\r\n                lng: 9.9821214181999,\r\n            }]};\r\n    }\r\n    renderPolylines (map, maps) {\r\n       /** Example of rendering geodesic polyline */\r\n\r\n       /** Example of rendering non geodesic polyline (straight line) */\r\n       let nonGeodesicPolyline = new maps.Polyline({\r\n         path: this.props.markers,\r\n         geodesic: false,\r\n         strokeColor: '#e4e4e4',\r\n         strokeOpacity: 0.7,\r\n         strokeWeight: 3\r\n       })\r\n       nonGeodesicPolyline.setMap(map)\r\n\r\n       this.fitBounds(map, maps)\r\n     }\r\n\r\n     fitBounds (map, maps) {\r\n       var bounds = new maps.LatLngBounds()\r\n       for (let marker of this.props.markers) {\r\n         bounds.extend(\r\n           new maps.LatLng(marker.lat, marker.lng)\r\n         )\r\n       }\r\n       map.fitBounds(bounds)\r\n     }\r\n    render(){\r\n\r\n      //Map (Google API) with function that sets Markers\r\n      //\r\n        return (\r\n            <div className=\"map\">\r\n                <div className=\"google-map\">\r\n                    <GoogleMapReact\r\n                        onClick={e => {\r\n                            console.log('New Pin');\r\n                            console.log(e);\r\n                            this.setState({\r\n                                locations: [{\r\n                                    address: 'New Pin',\r\n                                    lat: e.lat,\r\n                                    lng: e.lng,\r\n                                }]\r\n                            });\r\n                            return <MapPopup/>;\r\n                        } }\r\n                        bootstrapURLKeys={{ key:'AIzaSyDSF3sRrD_jHS-OHJwtQBvCAMAluNU_FrY'}}\r\n                        defaultCenter={this.props.center}\r\n                        defaultZoom={this.props.zoom}\r\n                        onGoogleApiLoaded={({map, maps}) => this.renderPolylines(map, maps)}>\r\n                        {this.state.locations.map(function(object, i){\r\n                            return <LocationPin\r\n                                key={i}\r\n                                lat={object.lat}\r\n                                lng={object.lng}\r\n                                text={object.address}\r\n                            />;\r\n                        })}\r\n                    </GoogleMapReact>\r\n\r\n                </div>\r\n\r\n    <Footer/>\r\n            </div>\r\n\r\n        );\r\n  }\r\n}\r\n\r\nHome.defaultProps = {\r\n  markers: Cords,\r\n  center: [52.49632997574632, 13.437847871710412],\r\n  zoom: 4\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}