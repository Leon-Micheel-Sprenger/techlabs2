{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laptop\\\\Documents\\\\GitHub\\\\techlabs2\\\\src\\\\index.js\";\nimport React from 'react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Login from \"./components/login/Login\";\nimport Map from \"./components/home/Home\";\nimport Menu from \"./components/menu/Menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WindowWidth extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      height: window.innerHeight,\n      width: window.innerWidth\n    };\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.height); // Additionally I could have just used an arrow function for the binding `this` to the component...\n\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n\n  updateDimensions() {\n    this.setState({\n      height: window.innerHeight,\n      width: window.innerWidth\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(WindowWidth, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 17\n}, this), document.querySelector(\".root\"));\nrender( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 34\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"\",\n        element: /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"menu\",\n        element: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n/* Alle Routen unter '/' erben das UI von '/'. So kann man bspw. die Navbar in jedem Screen sehen. */\n//<App />\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["C:/Users/laptop/Documents/GitHub/techlabs2/src/index.js"],"names":["React","App","reportWebVitals","ReactDOM","render","BrowserRouter","Routes","Route","Login","Map","Menu","WindowWidth","Component","constructor","state","height","window","innerHeight","width","innerWidth","updateDimensions","bind","componentDidMount","console","log","addEventListener","setState","componentWillUnmount","removeEventListener","document","querySelector","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SACIC,aADJ,EAEIC,MAFJ,EAGIC,KAHJ,QAIO,kBAJP;AAKA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;;AAGA,MAAMC,WAAN,SAA0BX,KAAK,CAACY,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAEC,MAAM,CAACC,WADJ;AAEXC,MAAAA,KAAK,EAAEF,MAAM,CAACG;AAFH,KAAb;AAIA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,MAAvB,EADkB,CAElB;;AACAC,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkC,KAAKL,gBAAvC;AACD;;AACDA,EAAAA,gBAAgB,GAAG;AACjB,SAAKM,QAAL,CAAc;AACZX,MAAAA,MAAM,EAAEC,MAAM,CAACC,WADH;AAEZC,MAAAA,KAAK,EAAEF,MAAM,CAACG;AAFF,KAAd;AAID;;AAEDQ,EAAAA,oBAAoB,GAAG;AACrBX,IAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqC,KAAKR,gBAA1C;AACD;;AAvBuC;;AA0B1CjB,QAAQ,CAACC,MAAT,eAAgB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAiCyB,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAjC;AAGA1B,MAAM,eACJ,QAAC,aAAD;AAAA,yBACE,QAAC,MAAD;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,OAAO,eAAE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cAAzB;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,EAAZ;AAAe,QAAA,OAAO,eAAE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADI,EAUJyB,QAAQ,CAACE,cAAT,CAAwB,MAAxB,CAVI,CAAN;AAeA;AAEA;AACA;AACA;AACA;;AACA7B,eAAe","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from \"react-dom\";\r\nimport { render } from \"react-dom\";\r\nimport {\r\n    BrowserRouter,\r\n    Routes,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport Login from \"./components/login/Login\";\r\nimport Map from \"./components/home/Home\";\r\nimport Menu from \"./components/menu/Menu\";\r\n\r\n\r\nclass WindowWidth extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      height: window.innerHeight,\r\n      width: window.innerWidth\r\n    };\r\n    this.updateDimensions = this.updateDimensions.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    console.log(this.state.height);\r\n    // Additionally I could have just used an arrow function for the binding `this` to the component...\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n  updateDimensions() {\r\n    this.setState({\r\n      height: window.innerHeight,\r\n      width: window.innerWidth\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n}\r\n\r\nReactDOM.render(<WindowWidth />, document.querySelector(\".root\"));\r\n\r\n\r\nrender(\r\n  <BrowserRouter>\r\n    <Routes>\r\n        <Route path=\"/\" element={<App/>}>\r\n            <Route path=\"\" element={<Map/>}/>\r\n            <Route path=\"login\" element={<Login/>}/>\r\n            <Route path=\"menu\" element={<Menu/>}/>\r\n        </Route>\r\n    </Routes>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n/* Alle Routen unter '/' erben das UI von '/'. So kann man bspw. die Navbar in jedem Screen sehen. */\r\n\r\n//<App />\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"]},"metadata":{},"sourceType":"module"}