{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laptop\\\\Documents\\\\GitHub\\\\techlabs2\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { render } from \"react-dom\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Login from \"./components/login/Login\";\nimport Map from \"./components/home/Home\";\nimport Menu from \"./components/menu/Menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction debounce(fn, ms) {\n  let timer;\n  return _ => {\n    clearTimeout(timer);\n    timer = setTimeout(_ => {\n      timer = null;\n      fn.apply(this, arguments);\n    }, ms);\n  };\n}\n\nfunction WidthAndHeight() {\n  _s();\n\n  const [dimensions, setDimensions] = React.useState({\n    height: window.innerHeight,\n    width: window.innerWidth\n  });\n  React.useEffect(() => {\n    const debouncedHandleResize = debounce(function handleResize() {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth\n      });\n    }, 1000);\n    window.addEventListener('resize', debouncedHandleResize);\n    return _ => {\n      window.removeEventListener('resize', debouncedHandleResize);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Rendered at \", dimensions.width, \" x \", dimensions.height]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n}\n\n_s(WidthAndHeight, \"a14BlOfKf3D1V6VWd8gxCcgJhiU=\");\n\n_c = WidthAndHeight;\nrender( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 34\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"\",\n        element: /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"menu\",\n        element: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n/* Alle Routen unter '/' erben das UI von '/'. So kann man bspw. die Navbar in jedem Screen sehen. */\n//<App />\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"WidthAndHeight\");","map":{"version":3,"sources":["C:/Users/laptop/Documents/GitHub/techlabs2/src/index.js"],"names":["React","App","reportWebVitals","render","BrowserRouter","Routes","Route","Login","Map","Menu","debounce","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","WidthAndHeight","dimensions","setDimensions","useState","height","window","innerHeight","width","innerWidth","useEffect","debouncedHandleResize","handleResize","addEventListener","removeEventListener","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,SAASC,MAAT,QAAuB,WAAvB;AACA,SACIC,aADJ,EAEIC,MAFJ,EAGIC,KAHJ,QAIO,kBAJP;AAKA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;;AAGA,SAASC,QAAT,CAAkBC,EAAlB,EAAsBC,EAAtB,EAA0B;AACxB,MAAIC,KAAJ;AACA,SAAOC,CAAC,IAAI;AACVC,IAAAA,YAAY,CAACF,KAAD,CAAZ;AACAA,IAAAA,KAAK,GAAGG,UAAU,CAACF,CAAC,IAAI;AACtBD,MAAAA,KAAK,GAAG,IAAR;AACAF,MAAAA,EAAE,CAACM,KAAH,CAAS,IAAT,EAAeC,SAAf;AACD,KAHiB,EAGfN,EAHe,CAAlB;AAID,GAND;AAOD;;AAED,SAASO,cAAT,GAA0B;AAAA;;AACxB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BrB,KAAK,CAACsB,QAAN,CAAe;AACjDC,IAAAA,MAAM,EAAEC,MAAM,CAACC,WADkC;AAEjDC,IAAAA,KAAK,EAAEF,MAAM,CAACG;AAFmC,GAAf,CAApC;AAIA3B,EAAAA,KAAK,CAAC4B,SAAN,CAAgB,MAAM;AACpB,UAAMC,qBAAqB,GAAGnB,QAAQ,CAAC,SAASoB,YAAT,GAAwB;AAC7DT,MAAAA,aAAa,CAAC;AACZE,QAAAA,MAAM,EAAEC,MAAM,CAACC,WADH;AAEZC,QAAAA,KAAK,EAAEF,MAAM,CAACG;AAFF,OAAD,CAAb;AAID,KALqC,EAKnC,IALmC,CAAtC;AAOAH,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCF,qBAAlC;AAEA,WAAOf,CAAC,IAAI;AACVU,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCH,qBAArC;AAEL,KAHG;AAID,GAdD;AAeA,sBAAO;AAAA,+BAAkBT,UAAU,CAACM,KAA7B,SAAuCN,UAAU,CAACG,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GArBQJ,c;;KAAAA,c;AAwBThB,MAAM,eAEJ,QAAC,aAAD;AAAA,yBACE,QAAC,MAAD;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,OAAO,eAAE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cAAzB;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,EAAZ;AAAe,QAAA,OAAO,eAAE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QAFI,EAYJ8B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAZI,CAAN;AAiBA;AAEA;AACA;AACA;AACA;;AACAhC,eAAe","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { render } from \"react-dom\";\r\nimport {\r\n    BrowserRouter,\r\n    Routes,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport Login from \"./components/login/Login\";\r\nimport Map from \"./components/home/Home\";\r\nimport Menu from \"./components/menu/Menu\";\r\n\r\n\r\nfunction debounce(fn, ms) {\r\n  let timer\r\n  return _ => {\r\n    clearTimeout(timer)\r\n    timer = setTimeout(_ => {\r\n      timer = null\r\n      fn.apply(this, arguments)\r\n    }, ms)\r\n  };\r\n}\r\n\r\nfunction WidthAndHeight() {\r\n  const [dimensions, setDimensions] = React.useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth\r\n  })\r\n  React.useEffect(() => {\r\n    const debouncedHandleResize = debounce(function handleResize() {\r\n      setDimensions({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth\r\n      })\r\n    }, 1000)\r\n\r\n    window.addEventListener('resize', debouncedHandleResize)\r\n\r\n    return _ => {\r\n      window.removeEventListener('resize', debouncedHandleResize)\r\n\r\n}\r\n  })\r\n  return <div>Rendered at {dimensions.width} x {dimensions.height}</div>\r\n}\r\n\r\n\r\nrender(\r\n\r\n  <BrowserRouter>\r\n    <Routes>\r\n        <Route path=\"/\" element={<App/>}>\r\n            <Route path=\"\" element={<Map/>}/>\r\n            <Route path=\"login\" element={<Login/>}/>\r\n            <Route path=\"menu\" element={<Menu/>}/>\r\n        </Route>\r\n    </Routes>\r\n  </BrowserRouter>\r\n,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n/* Alle Routen unter '/' erben das UI von '/'. So kann man bspw. die Navbar in jedem Screen sehen. */\r\n\r\n//<App />\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"]},"metadata":{},"sourceType":"module"}