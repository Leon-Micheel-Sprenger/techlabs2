{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laptop\\\\Documents\\\\GitHub\\\\techlabs2\\\\src\\\\components\\\\home\\\\Home.jsx\";\nimport React from 'react';\nimport './home.css';\nimport { Icon } from \"@iconify/react/dist/iconify\";\nimport locationIcon from \"@iconify/icons-mdi/map-marker\";\nimport GoogleMapReact from \"google-map-react\";\nimport MapPopup from \"../dialog/LocationDialog\";\nimport LocationDialog from \"../dialog/LocationDialog\";\nimport Footer from \"../footer/Footer\";\nimport Offcanvas from 'react';\nimport Button from 'react';\nimport useState from 'react';\nimport render from 'react';\nimport Polyline from 'react';\nimport WidthAndHeight from \"../Resp/Respo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst location = {\n  address: 'Görli',\n  lat: 52.49632997574632,\n  lng: 13.437847871710412\n};\nconst defaultProps = {\n  center: {\n    lat: 10.99835602,\n    lng: 77.01502627\n  },\n  zoom: 17\n};\n\nconst LocationPin = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pin\",\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      icon: locationIcon,\n      className: \"pin-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"pin-text\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LocationPin;\n\npathCoordinates: [{\n  lat: 50,\n  lng: 1\n}, {\n  lat: 50.1,\n  lng: 1.1\n}];\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locations: [{\n        address: 'Initial Pin',\n        lat: 52.49632997574632,\n        lng: 13.437847871710412\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"google-map\",\n        children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n          onClick: e => {\n            console.log('New Pin');\n            console.log(e);\n            this.setState({\n              locations: [{\n                address: 'New Pin',\n                lat: e.lat,\n                lng: e.lng\n              }]\n            });\n            return /*#__PURE__*/_jsxDEV(MapPopup, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 36\n            }, this);\n          },\n          bootstrapURLKeys: {\n            key: ''\n          },\n          defaultCenter: location,\n          defaultZoom: defaultProps.zoom,\n          children: [this.state.locations.map(function (object, i) {\n            return /*#__PURE__*/_jsxDEV(LocationPin, {\n              lat: object.lat,\n              lng: object.lng,\n              text: object.address\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 36\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(Polyline, {\n            path: pathCoordinates,\n            options: {\n              strokeColor: '#00ffff',\n              strokeOpacity: 1,\n              strokeWeight: 2,\n              icons: [{\n                icon: \"hello\",\n                offset: '0',\n                repeat: '10px'\n              }]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction initMap() {\n  const map = new google.maps.Map(document.getElementById(\"map\"), {\n    zoom: 3,\n    center: {\n      lat: 0,\n      lng: -180\n    },\n    mapTypeId: \"terrain\"\n  });\n  const flightPlanCoordinates = [{\n    lat: 37.772,\n    lng: -122.214\n  }, {\n    lat: 21.291,\n    lng: -157.821\n  }, {\n    lat: -18.142,\n    lng: 178.431\n  }, {\n    lat: -27.467,\n    lng: 153.027\n  }];\n  const flightPath = new google.maps.Polyline({\n    path: flightPlanCoordinates,\n    geodesic: true,\n    strokeColor: \"#FF0000\",\n    strokeOpacity: 1.0,\n    strokeWeight: 2\n  });\n  flightPath.setMap(map);\n}\n\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationPin\");","map":{"version":3,"sources":["C:/Users/laptop/Documents/GitHub/techlabs2/src/components/home/Home.jsx"],"names":["React","Icon","locationIcon","GoogleMapReact","MapPopup","LocationDialog","Footer","Offcanvas","Button","useState","render","Polyline","WidthAndHeight","location","address","lat","lng","defaultProps","center","zoom","LocationPin","text","pathCoordinates","Home","Component","constructor","props","state","locations","e","console","log","setState","key","map","object","i","strokeColor","strokeOpacity","strokeWeight","icons","icon","offset","repeat","initMap","google","maps","Map","document","getElementById","mapTypeId","flightPlanCoordinates","flightPath","path","geodesic","setMap"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport './home.css'\r\nimport {Icon} from \"@iconify/react/dist/iconify\";\r\nimport locationIcon from \"@iconify/icons-mdi/map-marker\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport MapPopup from \"../dialog/LocationDialog\";\r\nimport LocationDialog from \"../dialog/LocationDialog\";\r\nimport Footer from \"../footer/Footer\";\r\nimport Offcanvas from 'react';\r\nimport Button from 'react';\r\nimport useState from 'react';\r\nimport render from 'react';\r\nimport Polyline from 'react';\r\nimport WidthAndHeight from \"../Resp/Respo\"\r\n\r\n\r\nconst location = {\r\n    address: 'Görli',\r\n    lat: 52.49632997574632,\r\n    lng: 13.437847871710412,\r\n}\r\nconst defaultProps = {\r\n    center: {\r\n        lat: 10.99835602,\r\n        lng: 77.01502627\r\n    },\r\n    zoom: 17\r\n};\r\nconst LocationPin = ({ text }) => (\r\n    <div className=\"pin\">\r\n        <Icon icon={locationIcon} className=\"pin-icon\" />\r\n        <p className=\"pin-text\">{text}</p>\r\n    </div>\r\n)\r\npathCoordinates:[\r\n  {lat:50, lng:1},\r\n  {lat:50.1, lng:1.1},\r\n]\r\nclass Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {locations: [{\r\n                address: 'Initial Pin',\r\n                lat: 52.49632997574632,\r\n                lng: 13.437847871710412,\r\n            }]};\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"map\">\r\n                <div className=\"google-map\">\r\n                    <GoogleMapReact\r\n                        onClick={e => {\r\n                            console.log('New Pin');\r\n                            console.log(e);\r\n                            this.setState({\r\n                                locations: [{\r\n                                    address: 'New Pin',\r\n                                    lat: e.lat,\r\n                                    lng: e.lng,\r\n                                }]\r\n                            });\r\n                            return <MapPopup/>;\r\n                        } }\r\n                        bootstrapURLKeys={{ key: '' }}\r\n                        defaultCenter={location}\r\n                        defaultZoom={defaultProps.zoom}>\r\n                        {this.state.locations.map(function(object, i){\r\n                            return <LocationPin\r\n                                key={i}\r\n                                lat={object.lat}\r\n                                lng={object.lng}\r\n                                text={object.address}\r\n                            />;\r\n\r\n                        })}\r\n                        <Polyline\r\n                          path={pathCoordinates}\r\n                          options={{\r\n                          strokeColor: '#00ffff',\r\n                          strokeOpacity: 1,\r\n                          strokeWeight: 2,\r\n                          icons: [{\r\n                            icon: \"hello\",\r\n                            offset: '0',\r\n                            repeat: '10px'\r\n                          }],\r\n                        }}\r\n                        />\r\n                    </GoogleMapReact>\r\n\r\n                </div>\r\n\r\n    <Footer/>\r\n            </div>\r\n\r\n        );\r\n    }}\r\n    function initMap() {\r\n  const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n    zoom: 3,\r\n    center: { lat: 0, lng: -180 },\r\n    mapTypeId: \"terrain\",\r\n  });\r\n  const flightPlanCoordinates = [\r\n    { lat: 37.772, lng: -122.214 },\r\n    { lat: 21.291, lng: -157.821 },\r\n    { lat: -18.142, lng: 178.431 },\r\n    { lat: -27.467, lng: 153.027 },\r\n  ];\r\n  const flightPath = new google.maps.Polyline({\r\n    path: flightPlanCoordinates,\r\n    geodesic: true,\r\n    strokeColor: \"#FF0000\",\r\n    strokeOpacity: 1.0,\r\n    strokeWeight: 2,\r\n  });\r\n\r\n  flightPath.setMap(map);\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}