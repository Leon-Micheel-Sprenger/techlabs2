{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laptop\\\\Documents\\\\GitHub\\\\techlabs2\\\\src\\\\components\\\\dialog\\\\location.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport GoogleMapReact from \"google-map-react\";\nimport Polyline from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Location = () => {\n  _s();\n\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [status, setStatus] = useState(null);\n  const coordinates = [];\n\n  const getLocation = () => {\n    if (!navigator.geolocation) {\n      setStatus('Geolocation is not supported by your browser');\n    } else {\n      setStatus('Locating...');\n      navigator.geolocation.watchPosition(position => {\n        setStatus(null);\n        setLat(position.coords.latitude);\n        setLng(position.coords.longitude);\n        console.log(\"Latitude is :\", position.coords.latitude);\n        console.log(\"Longitude is :\", position.coords.longitude);\n        coordinates.push([position.coords.latitude, position.coords.longitude]);\n        window.localStorage.setItem(\"coordinates\", JSON.stringify(coordinates));\n      }, () => {\n        setStatus('Unable to retrieve your location');\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Location\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getLocation,\n      children: \"Get Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Location, \"hE8zokPMCLWpC8jNhVBxs8GN+Js=\");\n\n_c = Location;\n\nvar _c;\n\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"sources":["C:/Users/laptop/Documents/GitHub/techlabs2/src/components/dialog/location.jsx"],"names":["React","useState","GoogleMapReact","Polyline","Location","lat","setLat","lng","setLng","status","setStatus","coordinates","getLocation","navigator","geolocation","watchPosition","position","coords","latitude","longitude","console","log","push","window","localStorage","setItem","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,OAArB;;;AAEE,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMU,WAAW,GAAG,EAApB;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAI,CAACC,SAAS,CAACC,WAAf,EAA4B;AAC1BJ,MAAAA,SAAS,CAAC,8CAAD,CAAT;AACD,KAFD,MAEO;AACLA,MAAAA,SAAS,CAAC,aAAD,CAAT;AACAG,MAAAA,SAAS,CAACC,WAAV,CAAsBC,aAAtB,CAAqCC,QAAD,IAAc;AAChDN,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAJ,QAAAA,MAAM,CAACU,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,CAAN;AACAV,QAAAA,MAAM,CAACQ,QAAQ,CAACC,MAAT,CAAgBE,SAAjB,CAAN;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BL,QAAQ,CAACC,MAAT,CAAgBC,QAA7C;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,QAAQ,CAACC,MAAT,CAAgBE,SAA9C;AACAR,QAAAA,WAAW,CAACW,IAAZ,CAAiB,CAACN,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,EAA2BF,QAAQ,CAACC,MAAT,CAAgBE,SAA3C,CAAjB;AACAI,QAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,aAA5B,EAA2CC,IAAI,CAACC,SAAL,CAAehB,WAAf,CAA3C;AAED,OATD,EASG,MAAM;AACPD,QAAAA,SAAS,CAAC,kCAAD,CAAT;AACD,OAXD;AAYD;AACF,GAlBD;;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE;AAAQ,MAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA/BC;;GAAMR,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react';\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport Polyline from 'react';\r\n\r\n  const Location = () => {\r\n  const [lat, setLat] = useState(null);\r\n  const [lng, setLng] = useState(null);\r\n  const [status, setStatus] = useState(null);\r\n  const coordinates = [];\r\n\r\n  const getLocation = () => {\r\n    if (!navigator.geolocation) {\r\n      setStatus('Geolocation is not supported by your browser');\r\n    } else {\r\n      setStatus('Locating...');\r\n      navigator.geolocation.watchPosition((position) => {\r\n        setStatus(null);\r\n        setLat(position.coords.latitude);\r\n        setLng(position.coords.longitude);\r\n        console.log(\"Latitude is :\", position.coords.latitude);\r\n        console.log(\"Longitude is :\", position.coords.longitude);\r\n        coordinates.push([position.coords.latitude, position.coords.longitude]);\r\n        window.localStorage.setItem(\"coordinates\", JSON.stringify(coordinates));\r\n\r\n      }, () => {\r\n        setStatus('Unable to retrieve your location');\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Location\">\r\n      <button onClick={getLocation}>Get Location</button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}