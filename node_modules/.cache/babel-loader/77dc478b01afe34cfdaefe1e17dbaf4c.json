{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laptop\\\\Documents\\\\GitHub\\\\techlabs2\\\\src\\\\components\\\\Journey\\\\Journey.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, render } from 'react';\nimport Offcanvas from 'react';\nimport Button from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction OffCanvasExample(_ref) {\n  _s();\n\n  let {\n    name,\n    ...props\n  } = _ref;\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      className: \"me-2\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Offcanvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: \"Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(OffCanvasExample, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = OffCanvasExample;\n\nfunction Example() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: ['bottom'].map((placement, idx) => /*#__PURE__*/_jsxDEV(OffCanvasExample, {\n      placement: placement,\n      name: placement\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n\n_c2 = Example;\nexport default /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 17\n}, this);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OffCanvasExample\");\n$RefreshReg$(_c2, \"Example\");","map":{"version":3,"sources":["C:/Users/laptop/Documents/GitHub/techlabs2/src/components/Journey/Journey.jsx"],"names":["React","useState","render","Offcanvas","Button","OffCanvasExample","name","props","show","setShow","handleClose","handleShow","Example","map","placement","idx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,OAAtB;AACA,OAAOC,MAAP,MAAmB,OAAnB;;;;AAGA,SAASC,gBAAT,OAA8C;AAAA;;AAAA,MAApB;AAAEC,IAAAA,IAAF;AAAQ,OAAGC;AAAX,GAAoB;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMS,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAEE,UAAnC;AAA+C,MAAA,SAAS,EAAC,MAAzD;AAAA,gBACGL;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEE,IAAjB;AAAuB,MAAA,MAAM,EAAEE,WAA/B;AAAA,SAAgDH,KAAhD;AAAA,8BACE,QAAC,SAAD,CAAW,MAAX;AAAkB,QAAA,WAAW,MAA7B;AAAA,+BACE,QAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAgBD;;GAtBQF,gB;;KAAAA,gB;;AAwBT,SAASO,OAAT,GAAmB;AACjB,sBACE;AAAA,cACG,CAAC,QAAD,EAAWC,GAAX,CAAe,CAACC,SAAD,EAAYC,GAAZ,kBACd,QAAC,gBAAD;AAA4B,MAAA,SAAS,EAAED,SAAvC;AAAkD,MAAA,IAAI,EAAEA;AAAxD,OAAuBC,GAAvB;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAOD;;MARQH,O;AAUT,4BAAgB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,QAAhB","sourcesContent":["import React, { useState, render } from 'react';\r\nimport Offcanvas from 'react';\r\nimport Button from 'react';\r\n\r\n\r\nfunction OffCanvasExample({ name, ...props }) {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={handleShow} className=\"me-2\">\r\n        {name}\r\n      </Button>\r\n      <Offcanvas show={show} onHide={handleClose} {...props}>\r\n        <Offcanvas.Header closeButton>\r\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n          Some text as placeholder. In real life you can have the elements you\r\n          have chosen. Like, text, images, lists, etc.\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Example() {\r\n  return (\r\n    <>\r\n      {['bottom'].map((placement, idx) => (\r\n        <OffCanvasExample key={idx} placement={placement} name={placement} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default (<Example />);\r\n"]},"metadata":{},"sourceType":"module"}