{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laptop\\\\Documents\\\\GitHub\\\\techlabs2\\\\src\\\\components\\\\home\\\\Home.jsx\";\nimport React from 'react';\nimport './home.css';\nimport { Icon } from \"@iconify/react/dist/iconify\";\nimport locationIcon from \"@iconify/icons-mdi/map-marker\";\nimport GoogleMapReact from \"google-map-react\";\nimport MapPopup from \"../dialog/LocationDialog\";\nimport LocationDialog from \"../dialog/LocationDialog\";\nimport Footer from \"../footer/Footer\";\nimport Offcanvas from 'react';\nimport Button from 'react';\nimport useState from 'react';\nimport render from 'react';\nimport Marker from '../home/Marker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LocationPin = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pin\",\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      icon: locationIcon,\n      className: \"pin-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"pin-text\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LocationPin;\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locations: [{\n        address: 'Initial Pin',\n        lat: 52.49632997574632,\n        lng: 13.437847871710412\n      }]\n    };\n  }\n\n  renderPolylines(map, maps) {\n    /** Example of rendering geodesic polyline */\n\n    /** Example of rendering non geodesic polyline (straight line) */\n    let nonGeodesicPolyline = new maps.Polyline({\n      path: this.props.markers,\n      geodesic: false,\n      strokeColor: '#e4e4e4',\n      strokeOpacity: 0.7,\n      strokeWeight: 3\n    });\n    nonGeodesicPolyline.setMap(map);\n    this.fitBounds(map, maps);\n  }\n\n  fitBounds(map, maps) {\n    var bounds = new maps.LatLngBounds();\n\n    for (let marker of this.props.markers) {\n      bounds.extend(new maps.LatLng(marker.lat, marker.lng));\n    }\n\n    map.fitBounds(bounds);\n  }\n\n  render() {\n    const [coordinates, setCoordinates] = useState(() => {\n      // getting stored value\n      const saved = localStorage.getItem(\"coordinates\");\n      const initialValue = JSON.parse(saved);\n      return initialValue || \"\";\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"google-map\",\n        children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n          onClick: e => {\n            console.log('New Pin');\n            console.log(e);\n            this.setState({\n              locations: [{\n                address: 'New Pin',\n                lat: e.lat,\n                lng: e.lng\n              }]\n            });\n            return /*#__PURE__*/_jsxDEV(MapPopup, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 36\n            }, this);\n          },\n          bootstrapURLKeys: {\n            key: ''\n          },\n          defaultCenter: this.props.center,\n          defaultZoom: this.props.zoom,\n          onGoogleApiLoaded: _ref2 => {\n            let {\n              map,\n              maps\n            } = _ref2;\n            return this.renderPolylines(map, maps);\n          },\n          children: [this.state.locations.map(function (object, i) {\n            return /*#__PURE__*/_jsxDEV(LocationPin, {\n              lat: object.lat,\n              lng: object.lng,\n              text: object.address\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 36\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(Marker, {\n            text: 'DUB',\n            lat: 53.42728,\n            lng: -6.24357\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            text: 'YYZ',\n            lat: 43.681583,\n            lng: -79.61146\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nHome.defaultProps = {\n  markers: [coordinates],\n  center: [47.367347, 8.5500025],\n  zoom: 4\n};\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationPin\");","map":{"version":3,"sources":["C:/Users/laptop/Documents/GitHub/techlabs2/src/components/home/Home.jsx"],"names":["React","Icon","locationIcon","GoogleMapReact","MapPopup","LocationDialog","Footer","Offcanvas","Button","useState","render","Marker","LocationPin","text","Home","Component","constructor","props","state","locations","address","lat","lng","renderPolylines","map","maps","nonGeodesicPolyline","Polyline","path","markers","geodesic","strokeColor","strokeOpacity","strokeWeight","setMap","fitBounds","bounds","LatLngBounds","marker","extend","LatLng","coordinates","setCoordinates","saved","localStorage","getItem","initialValue","JSON","parse","e","console","log","setState","key","center","zoom","object","i","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport './home.css'\r\nimport {Icon} from \"@iconify/react/dist/iconify\";\r\nimport locationIcon from \"@iconify/icons-mdi/map-marker\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport MapPopup from \"../dialog/LocationDialog\";\r\nimport LocationDialog from \"../dialog/LocationDialog\";\r\nimport Footer from \"../footer/Footer\";\r\nimport Offcanvas from 'react';\r\nimport Button from 'react';\r\nimport useState from 'react';\r\nimport render from 'react';\r\nimport Marker from '../home/Marker'\r\n\r\n\r\nconst LocationPin = ({ text }) => (\r\n    <div className=\"pin\">\r\n        <Icon icon={locationIcon} className=\"pin-icon\" />\r\n        <p className=\"pin-text\">{text}</p>\r\n    </div>\r\n)\r\n\r\nclass Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {locations: [{\r\n                address: 'Initial Pin',\r\n                lat: 52.49632997574632,\r\n                lng: 13.437847871710412,\r\n            }]};\r\n    }\r\n    renderPolylines (map, maps) {\r\n       /** Example of rendering geodesic polyline */\r\n\r\n       /** Example of rendering non geodesic polyline (straight line) */\r\n       let nonGeodesicPolyline = new maps.Polyline({\r\n         path: this.props.markers,\r\n         geodesic: false,\r\n         strokeColor: '#e4e4e4',\r\n         strokeOpacity: 0.7,\r\n         strokeWeight: 3\r\n       })\r\n       nonGeodesicPolyline.setMap(map)\r\n\r\n       this.fitBounds(map, maps)\r\n     }\r\n\r\n     fitBounds (map, maps) {\r\n       var bounds = new maps.LatLngBounds()\r\n       for (let marker of this.props.markers) {\r\n         bounds.extend(\r\n           new maps.LatLng(marker.lat, marker.lng)\r\n         )\r\n       }\r\n       map.fitBounds(bounds)\r\n     }\r\n    render(){\r\n      const [coordinates, setCoordinates] = useState(() => {\r\n        // getting stored value\r\n        const saved = localStorage.getItem(\"coordinates\");\r\n        const initialValue = JSON.parse(saved);\r\n        return initialValue || \"\";\r\n      });\r\n        return (\r\n            <div className=\"map\">\r\n                <div className=\"google-map\">\r\n                    <GoogleMapReact\r\n                        onClick={e => {\r\n                            console.log('New Pin');\r\n                            console.log(e);\r\n                            this.setState({\r\n                                locations: [{\r\n                                    address: 'New Pin',\r\n                                    lat: e.lat,\r\n                                    lng: e.lng,\r\n                                }]\r\n                            });\r\n                            return <MapPopup/>;\r\n                        } }\r\n                        bootstrapURLKeys={{ key:''}}\r\n                        defaultCenter={this.props.center}\r\n                        defaultZoom={this.props.zoom}\r\n                        onGoogleApiLoaded={({map, maps}) => this.renderPolylines(map, maps)}>\r\n                        {this.state.locations.map(function(object, i){\r\n                            return <LocationPin\r\n                                key={i}\r\n                                lat={object.lat}\r\n                                lng={object.lng}\r\n                                text={object.address}\r\n                            />;\r\n                        })}\r\n                        <Marker text={'DUB'} lat={53.42728} lng={-6.24357} />\r\n                        <Marker text={'YYZ'} lat={43.681583} lng={-79.61146} />\r\n                    </GoogleMapReact>\r\n\r\n                </div>\r\n\r\n    <Footer/>\r\n            </div>\r\n\r\n        );\r\n  }\r\n}\r\nHome.defaultProps = {\r\n  markers: [coordinates],\r\n  center: [47.367347, 8.5500025],\r\n  zoom: 4\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}